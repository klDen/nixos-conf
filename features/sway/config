set $mod Mod4
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --gtk-dark --allow-images --show=drun --lines=5 --prompt=""

# A pixel border around every window.
gaps inner 1

# Removes the title bar of each window.
default_border none
default_floating_border none
# https://github.com/swaywm/sway/issues/1286#issuecomment-573465246
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 0
#font pango:monospace 0
#titlebar_border_thickness 0                                                     
#titlebar_padding 0

# https://bugzilla.mozilla.org/show_bug.cgi?id=1652820
input * {
  xkb_layout "us"
  xkb_variant "altgr-intl"
}

input type:touchpad {
  tap enabled
}

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+d exec $menu

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# resize window (you can also use the mouse for that)
mode "resize" {
   # These bindings trigger as soon as you enter the resize mode

   # Pressing left will shrink the window’s width.
   # Pressing right will grow the window’s width.
   # Pressing up will shrink the window’s height.
   # Pressing down will grow the window’s height.
   bindsym j resize shrink width 10 px or 10 ppt
   bindsym k resize grow height 10 px or 10 ppt
   bindsym l resize shrink height 10 px or 10 ppt
   bindsym semicolon resize grow width 10 px or 10 ppt

   # same bindings, but for the arrow keys
   bindsym Left resize shrink width 10 px or 10 ppt
   bindsym Down resize grow height 10 px or 10 ppt
   bindsym Up resize shrink height 10 px or 10 ppt
   bindsym Right resize grow width 10 px or 10 ppt

   # back to normal: Enter or Escape
   bindsym Return mode "default"
   bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

bar {
  swaybar_command waybar
}

set $Locker swaylock --daemonize --screenshots --effect-greyscale --effect-pixelate 5 && sleep 3

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
  bindsym l exec $Locker, mode "default"
  bindsym e exec swaymsg exit, mode "default"
  bindsym s exec $Locker && systemctl suspend, mode "default"
  bindsym h exec $Locker && systemctl hibernate, mode "default"
  bindsym r exec systemctl reboot, mode "default"
  bindsym Shift+s exec systemctl poweroff -i, mode "default" 

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+Control+l mode "$mode_system"

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec light -A 3 # increase screen brightness
bindsym XF86MonBrightnessDown exec light -U 3 # decrease screen brightness

# Screen shot control
bindsym Print exec grim -g "$(slurp)" - | XDG_CONFIG_HOME=/etc/xdg swappy -f - 

# Jump to urgent window
bindsym $mod+x [urgent=latest] focus

workspace 1 output HDMI-A-1
workspace 2 output HDMI-A-1
workspace 3 output HDMI-A-1
workspace 4 output HDMI-A-1
workspace 5 output HDMI-A-1

for_window [app_id="Signal"] move --no-auto-back-and-forth to workspace 1, layout default 
for_window [app_id="firefox"] move --no-auto-back-and-forth to workspace 2, layout tabbed, focus
for_window [app_id="foot"] move --no-auto-back-and-forth to workspace 3, layout tabbed
for_window [class="zoom"] move --no-auto-back-and-forth to workspace 1, layout default 
for_window [class="Slack"] move --no-auto-back-and-forth to workspace 1, layout default 
for_window [class="jetbrains-idea"] move --no-auto-back-and-forth to workspace 3, layout tabbed
for_window [class="jetbrains-pycharm"] move --no-auto-back-and-forth to workspace 3, layout tabbed
for_window [class="jetbrains-datagrip"] move --no-auto-back-and-forth to workspace 3, layout tabbed

exec flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
exec flatpak install --or-update flathub us.zoom.Zoom
exec signal-desktop --enable-features=UseOzonePlatform --ozone-platform=wayland # broken in wayland --start-in-tray
exec slack -u
exec firefox
exec $term

exec XDG_CONFIG_HOME=/etc/xdg mako
exec_always flashfocus
exec gammastep -l 45.54:-73.59 -l manual -t 4000:1900
exec cmst --minimized --wait-time 10
# exec kanshi --config /etc/kanshi/config

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
       timeout 300 $Locker \
       timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
       before-sleep $Locker

#https://github.com/swaywm/sway/wiki#gtk-applications-take-20-seconds-to-start
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

# https://www.reddit.com/r/swaywm/comments/eim1k1/conditional_clamshell_mode/
# Clamshell mode or lock & sleep
# Set your laptop screen name
set $laptop_screen 'eDP-1'
# This is a if/else statement: [ outputs_count == 1 ] && true || false
bindswitch --reload --locked lid:on exec '[ $(swaymsg -t get_outputs | grep name | wc -l) == 1 ] && ($Locker && systemctl suspend) || (swaymsg output $laptop_screen disable)'
bindswitch --reload --locked lid:off output $laptop_screen enable

include @sysconfdir@/sway/config.d/*

